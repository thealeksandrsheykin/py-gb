# -*- coding: utf-8 -*-
# !/usr/bin/env python3

"""
Дан список:
['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и
кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
Сформировать из обработанного списка строку:
в "05" часов "17" минут температура воздуха была "+05" градусов

Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для чисел
со знаком?

"""


array = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
result = list()
"""
for i, j in enumerate(array):
    # Определим является элемент списка числом
    try:
        var = int(j)
    except ValueError:
        if i == 0:
            result.append(j+' ')
        elif i == len(array)-1:
            result.append(' '+j)
        else:
            result.append(' '+j+' ')
        continue
    # Дополним нулём до двух целочисленных разрядов и обособим кавычками
    result.append('"')
    if j.isdigit() and len(j) < 2:
        result.append('0' + j)
    elif not j.isdigit() and len(j) < 3:
        result.append(array[i][0] + '0' + str(var))
    else:
        result.append(j)
    result.append('"')
"""
# Более простое решение

for i in array:
    # Проверяем является ли элемент списка числом
    if i.isdigit():
        # Добавляем в результирующий список, список из кавычек и двухразрядного числа
        result.extend(['"', f'{int(i):02}', '" '])
    # Проверяем начинается ли элемент списка с +/- и идет ли число после знака
    elif (i.startswith('+') or i.startswith('-')) and i[1:].isdigit():
        result.extend(['"', f'{i[0]}{int(i[1:]):02}', '" '])
    else:
        result.append(f'{i} ')
print(f'{"".join(result)}')
